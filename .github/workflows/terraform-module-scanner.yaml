# TERRAFORM MODULE SCANNER
# Version: 1.0.0
# Date: 2023-10-05
# Author: Neil Grinnall
#
# A GitHub Action for Terraform Modules
# - Runs 'terraform fmt'
# - Runs 'terraform validate'
# - Checks Code using TFLInt
# - Scans for security issues using CHECKOV
# - Creates/updates README.md using Terraform Docs
# - Sends a Slack message if any of the steps fail or if successful

name: 'Terraform Module Scanner'

# This workflow is triggered by manual dispatch, pull requests, and pushes to the 'main' branch.
# However, it ignores any changes made within the '.github/workflows/' directory.
on:
  # Allows manual triggering of the workflow from the GitHub Actions UI.
  workflow_dispatch:
  
  # Triggers the workflow for any pull request.
  pull_request:
  
  # Triggers the workflow for pushes.
  push:
    # Specifies that the workflow should only run for pushes to the 'main' branch.
    branches:
      - main
      
    # Exclude paths: The workflow won't run if only these paths are modified in a push.
    #paths-ignore:
    #  - '.github/workflows/**'

env:
  SLACK_CHANNEL_ID: 'C060DK2BWQM' # Define the Slack channel ID here
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # An automatically generated secret provided by GitHub for use in GitHub Actions.

jobs:

#### ------------------------------------------ ###
## TERRAFORM FMT & VALIDATE
#### ------------------------------------------ ###
# This step is responsible for initializing, formatting, and validating the Terraform code.
# 
# 1. `terraform init -backend=false`: 
#    - Initializes the Terraform working directory.
#    - Downloads the required provider plugins.
#    - The `-backend=false` option disables backend configuration, which means Terraform will use a local backend.
#      This means the Terraform state will be stored on the runner machine where the workflow is executed.
#
# 2. `terraform fmt`: 
#    - Automatically formats the Terraform code to adhere to a canonical format and style.
#
# 3. `terraform validate`: 
#    - Validates the Terraform code's syntax and checks for any errors.
# If the terraform validate command fails, subsequent steps in the workflow will not execute.

  terraform-fmt-validate-module:
    name: 'Terraform FMT & Validate - module'
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout the repository
      uses: actions/checkout@v3
      with:
        ref: main
         
    - name: Setup Terraform on the runner
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Terraform init, fmt, & validate
      run: |
        terraform init -backend=false
        terraform fmt
        terraform validate
        
    - name: Commit any changes to this repository
      uses: EndBug/add-and-commit@v9.1.1
      with:
        add: '.'
        author_name: 'GitHub Action - terraform-module-scanner'
        message: 'TERRAFORM FMT & VALIDATE'    

    - name: Push changes to main branch
      uses: ad-m/github-push-action@master
      with:
        branch: main
        directory: ./
        github_token: ${{ env.GITHUB_TOKEN }}

  terraform-fmt-validate-example:
    name: 'Terraform FMT & Validate - example'
    runs-on: ubuntu-latest
    needs: [terraform-fmt-validate-module]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Terraform on the runner
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform init, fmt, & validate - ./example/main.tf
        run: |
          cd ./example
          terraform init -backend=false
          terraform fmt
          terraform validate

      - name: Commit any changes to ./example/main.tf
        uses: EndBug/add-and-commit@v9.1.1
        with:
          add: './example/main.tf'
          author_name: 'GitHub Action - terraform-module-scanner'
          message: 'TERRAFORM FMT & VALIDATE - ./example/main.tf'

      - name: Push changes to main branch
        uses: ad-m/github-push-action@master
        with:
          branch: main
          directory: ./example/
          github_token: ${{ env.GITHUB_TOKEN }}

